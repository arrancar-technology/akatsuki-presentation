.form-group(ng-class='{"has-error": #{formName}["event-country"].$invalid && model.step.1.submitted, "has-success": #{formName}["event-country"].$valid && model.step.1.submitted}')
  label.col-sm-6.control-label.required(for="event-country") Country of Event
  .col-sm-6
    .input-group-btn
      select.input-sm.form-control(id="event-country", name="event-country", ng-model="model.order.certificate.eventCountry", ng-options="eventCountry for eventCountry in model.eventCountries", required='required')
.form-group(ng-class='{"has-error": #{formName}["service-type"].$invalid && model.step.1.submitted, "has-success": #{formName}["service-type"].$valid && model.step.1.submitted}')
  label.col-sm-6.control-label.required(for="service-type") Service Type
  .col-sm-6
    .input-group-btn
      select.input-sm.form-control(id="service-type", name="service-type", ng-model="model.order.certificate.serviceType", ng-options="key as key.capitalize() + ' - £' + value.price.certificate + ' - despatch within ' + value.dispatchTime  + ' working day' + (value.dispatchTime > 1 ? 's' : '') for (key, value) in model.serviceTypes", required='required')
.form-group(ng-class='{"has-error": #{formName}["number-of-copies"].$invalid && model.step.1.submitted, "has-success": #{formName}["number-of-copies"].$valid && model.step.1.submitted}')
  label.col-sm-6.control-label.required(for="number-of-copies") Number of Copies
  .col-sm-6
    .input-group-btn
      select.input-sm.form-control(id="number-of-copies", name="number-of-copies", ng-model="model.order.certificate.numberOfCopies", ng-options="number for number in model.numberOfCopies", required='required')
.form-group(ng-class='{"has-error": #{formName}["number-of-apostilles"].$invalid && model.step.1.submitted, "has-success": #{formName}["number-of-apostilles"].$valid && model.step.1.submitted}')
  label.col-sm-6.control-label.required(for="number-of-apostilles") Apostilled Copies
  .col-sm-6
    .input-group-btn
      select.input-sm.form-control(id="number-of-apostilles", name="number-of-apostilles", ng-model="model.order.certificate.numberOfApostilles", ng-options="number for number in model.numberOfApostilles", required='required')
        option(value="") -- (£{{model.serviceTypes[model.order.certificate.serviceType].price.apostille}} per stamp)
